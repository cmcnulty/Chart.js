{"version":3,"file":"chart.umd.js","sources":["../src/helpers/helpers.core.ts","../src/helpers/helpers.math.ts","../src/helpers/helpers.collection.ts","../src/helpers/helpers.extras.js","../src/core/core.animator.js","../node_modules/.pnpm/@kurkle+color@0.2.1/node_modules/@kurkle/color/dist/color.esm.js","../src/helpers/helpers.color.ts","../src/core/core.animations.defaults.js","../src/helpers/helpers.intl.ts","../src/core/core.ticks.js","../src/core/core.defaults.js","../src/core/core.layouts.defaults.js","../src/core/core.scale.defaults.js","../src/helpers/helpers.dom.js","../src/helpers/helpers.canvas.js","../src/helpers/helpers.config.js","../src/helpers/helpers.curve.js","../src/helpers/helpers.easing.ts","../src/helpers/helpers.interpolation.ts","../src/helpers/helpers.options.js","../src/helpers/helpers.rtl.ts","../src/helpers/helpers.segment.js","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/core/core.adapters.ts","../src/controllers/controller.bar.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.bubble.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/elements/element.arc.js","../src/elements/element.line.js","../src/elements/element.point.js","../src/elements/element.bar.js","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.umd.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../../types/geometric';\nimport {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n * @param {function} fn\n * @param {*} thisArg\n * @param {function} [updateFn]\n */\nexport function throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n\n  return function(...rest) {\n    args = updateArgs(rest);\n\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n * @param {function} fn - Function to call.\n * @param {number} delay - Delay in ms. 0 = immediate invocation.\n * @returns {function}\n */\nexport function debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @param {string} align start, end, center\n * @private\n */\nexport const _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @param {string} align start, end, center\n * @param {number} start value for start\n * @param {number} end value for end\n * @private\n */\nexport const _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @param {string} align start, end, center\n * @param {number} left value for start\n * @param {number} right value for end\n * @param {boolean} rtl Is this an RTL draw\n * @private\n */\nexport const _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @param {object} meta - dataset meta.\n * @param {array} points - array of point elements.\n * @param {boolean} animationsDisabled - if true animation is disabled.\n * @returns {{start: number; count: number}}\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib, {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element) => element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\n\n/**\n * @param {Event} e\n * @param {HTMLCanvasElement} canvas\n * @returns {{x: number, y: number, box: boolean}}\n */\nfunction getCanvasPosition(e, canvas) {\n  // @ts-ignore\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param {Event|ChartEvent} evt\n * @param {dom.Chart} chart\n * @returns {{x: number, y: number}}\n */\nexport function getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = v => Math.round(v * 10) / 10;\n\nexport function getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {\n    width,\n    height\n  };\n}\n\n/**\n * @param {import('../core/core.controller').default} chart\n * @param {number} [forceRatio]\n * @param {boolean} [forceStyle]\n * @returns {boolean} True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    };\n    // @ts-ignore\n    window.addEventListener('test', null, options);\n    // @ts-ignore\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number=} Size in pixels or undefined if unknown.\n */\nexport function readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n *\n * @param {{\n * x: number,\n * y: number,\n * skip?: boolean,\n * cp1x?: number,\n * cp1y?: number,\n * cp2x?: number,\n * cp2y?: number,\n * }[]} points\n * @param {string} indexAxis\n */\nexport function splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import type {Point} from '../../types/geometric';\nimport type {MonotoneSplinePoint} from '../../types/helpers';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: MonotoneSplinePoint, p2: MonotoneSplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {toFontString} from './helpers.canvas';\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  default:\n    break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = v => +v || 0;\n\n/**\n * @param {any} value\n * @param {string[] | Record<string, string>} props\n */\nexport function _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param {number|object} value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns {object} The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param {number|object} value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns {object} The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param {number|object} value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns {object} The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value) {\n  const obj = toTRBL(value);\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n\n/**\n * Parses font options and returns the font object.\n * @param {object} options - A object that contains font options to be parsed.\n * @param {object} [fallback] - A object that contains fallback font options.\n * @return {object} The font object.\n * @private\n */\nexport function toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param {Array} inputs - An array of values, falling back to the last value.\n * @param {object} [context] - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param {number} [index] - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param {object} [info] - object to return information about resolution in\n * @param {boolean} [info.cacheable] - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param {{min: number, max: number}} minmax\n * @param {number|string} grace\n * @param {boolean} beginAtZero\n * @private\n */\nexport function _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param {object|null} parentContext\n * @param {object} context\n * @returns {object}\n */\nexport function createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        const metrics = this.ctx.measureText(label);\n\n        const labelX = metrics.actualBoundingBoxLeft;\n        const labelY = metrics.actualBoundingBoxAscent - tickAndPadding;\n\n        let top = labelY + textOffset - labelPadding.top;\n        let left = labelX - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, startAngle: number, endAngle: number, innerRadius: number, outerRadius: number, circumference: number }} ArcProps */\n/** @typedef {import('../../types/geometric').Point} Point */\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n * @param {ArcElement} arc\n * @param {number} innerRadius\n * @param {number} outerRadius\n * @param {number} angleDelta Arc circumference in radians\n * @returns\n */\nfunction parseBorderRadius(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n * @param {number} r Radius from center point\n * @param {number} theta Angle in radians\n * @param {number} x Center X coordinate\n * @param {number} y Center Y coordinate\n * @returns {{ x: number; y: number }} Rectangular coordinate point\n */\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting the border radius\n *\n * 8 points of interest exist around the arc segment.\n * These points define the intersection of the arc edges and the corners.\n *\n *   Start      End\n *\n *    1---------2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6---------5    Inner\n * @param {CanvasRenderingContext2D} ctx\n * @param {ArcElement} element\n */\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segment from point 1 to point 2\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point 6\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\n\nexport default class ArcElement extends Element {\n\n  static id = 'arc';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  /**\n\t * @param {number} chartX\n\t * @param {number} chartY\n\t * @param {boolean} [useFinalPosition]\n\t */\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = /** @type {Point} */ (this.getProps(['x', 'y'], useFinalPosition));\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = /** @type {ArcProps} */ (this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition));\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  /**\n\t * @param {boolean} [useFinalPosition]\n\t */\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = /** @type {ArcProps} */ (this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition));\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  /**\n\t * @param {boolean} [useFinalPosition]\n\t */\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\n\nfunction inRange(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport default class PointElement extends Element {\n\n  static id = 'point';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = /** @type {{ x: number, y: number }} */ (this.getProps(['x', 'y'], useFinalPosition));\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\n/**\n * @namespace Chart\n */\nimport Chart from './core/core.controller';\n\nimport * as helpers from './helpers';\nimport _adapters from './core/core.adapters';\nimport Animation from './core/core.animation';\nimport animator from './core/core.animator';\nimport Animations from './core/core.animations';\nimport * as controllers from './controllers';\nimport DatasetController from './core/core.datasetController';\nimport Element from './core/core.element';\nimport * as elements from './elements/index';\nimport Interaction from './core/core.interaction';\nimport layouts from './core/core.layouts';\nimport * as platforms from './platform/index';\nimport * as plugins from './plugins';\nimport registry from './core/core.registry';\nimport Scale from './core/core.scale';\nimport * as scales from './scales';\nimport Ticks from './core/core.ticks';\n\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\n\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nexport default Chart;\n\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","resolveObjectKey","obj","resolver","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","this","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","colorLib","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","height","getRelativePosition","evt","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","effects$1","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","labelX","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","Chart$1","abstract","DateAdapterBase","members","formats","startOf","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","legendItem","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","pointPosition","getPointPositionForValue","clipArc","pixelMargin","angleMargin","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","hoverRadius","mouseX","mouseY","inXRange","inYRange","addRectPath","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","fontColor","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale$1","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","_addedLabels","added","helpers","platforms"],"mappings":"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"}